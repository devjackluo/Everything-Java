 
  ----jGRASP exec: java cscd211Lab4.CSCD211Lab4
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 0
 Enter a menu choice 1
 Empty List
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 2
 Enter a String for new BoxCar
 dance
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 1
 [dance]
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 2
 Enter a String for new BoxCar
 flight
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 1
 [flight]
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 
  ----jGRASP: process ended by user.
 
  ----jGRASP exec: java cscd211Lab4.CSCD211Lab4
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 1
 Empty List
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 2
 Enter a String for new BoxCar
 dance
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 2
 Enter a String for new BoxCar
 flight
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 1
 [flight, dance]
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 3
 Enter a String for new BoxCar
 win
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 1
 [flight, dance, win]
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 4
 Enter a String for new BoxCar
 cry
 Enter a Index value 0
 Enter a Index value 1
 Enter a Index value 2
 Enter a Index value 
  ----jGRASP: process ended by user.
 
  ----jGRASP exec: java cscd211Lab4.CSCD211Lab4
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 1
 Empty List
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 2
 Enter a String for new BoxCar
 flight
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 1
 [flight]
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 2
 Enter a String for new BoxCar
 dance
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 1
 [dance, flight]
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 3
 Enter a String for new BoxCar
 win
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 1
 [dance, flight, win]
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 4
 Enter a String for new BoxCar
 winner
 Enter a Index value 8
 Exception in thread "main" java.lang.NullPointerException
 	at cscd211LinkedList.LinkedList.add(LinkedList.java:120)
 	at cscd211Lab4.CSCD211Lab4.main(CSCD211Lab4.java:60)
 
  ----jGRASP wedge2: exit code for process is 1.
  ----jGRASP: operation complete.
 
  ----jGRASP exec: java cscd211Lab4.CSCD211Lab4
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 1
 Empty List
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 2
 Enter a String for new BoxCar
 dance
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 3
 Enter a String for new BoxCar
 queen
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 4
 Enter a String for new BoxCar
 queens
 Enter a Index value 1
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 1
 [dance, queens, queen]
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 5
 Enter a String for new BoxCar
 queen
 
 
  ----jGRASP: process ended by user.
 
  ----jGRASP exec: java cscd211Lab4.CSCD211Lab4
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 2
 Enter a String for new BoxCar
 dance
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 3
 Enter a String for new BoxCar
 run
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 4
 Enter a String for new BoxCar
 1
 Enter a Index value runs
 Exception in thread "main" java.lang.NumberFormatException: For input string: "runs"
 	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
 	at java.lang.Integer.parseInt(Integer.java:580)
 	at java.lang.Integer.parseInt(Integer.java:615)
 	at cscd211Methods.LinkedListMethods.readIndex(LinkedListMethods.java:106)
 	at cscd211Lab4.CSCD211Lab4.main(CSCD211Lab4.java:59)
 
  ----jGRASP wedge2: exit code for process is 1.
  ----jGRASP: operation complete.
 
  ----jGRASP exec: java cscd211Lab4.CSCD211Lab4
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 1
 Empty List
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 2
 Enter a String for new BoxCar
 adds
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 1
 [adds]
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 3
 Enter a String for new BoxCar
 dance
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 1
 [adds, dance]
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 4
 Enter a String for new BoxCar
 fight
 Enter a Index value 1
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 1
 [adds, fight, dance]
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 5
 Enter a String for new BoxCar
 fight
 The results of contains true
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 1
 [adds, fight, dance]
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 6
 Enter a String for new BoxCar
 dog
 The results of indexOf -1
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 6
 Enter a String for new BoxCar
 fight
 The results of indexOf 1
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 1
 [adds, fight, dance]
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 6
 Enter a String for new BoxCar
 adds
 The results of indexOf 0
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 7
 The results of remove adds
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 1
 [fight, dance]
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 8
 The results of remove dance
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 1
 [fight]
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 2
 Enter a String for new BoxCar
 fog
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 1
 [fog, fight]
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice bug
 Exception in thread "main" java.lang.NumberFormatException: For input string: "bug"
 	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
 	at java.lang.Integer.parseInt(Integer.java:580)
 	at java.lang.Integer.parseInt(Integer.java:615)
 	at cscd211Methods.LinkedListMethods.menu(LinkedListMethods.java:59)
 	at cscd211Lab4.CSCD211Lab4.main(CSCD211Lab4.java:43)
 
  ----jGRASP wedge2: exit code for process is 1.
  ----jGRASP: operation complete.
 
  ----jGRASP exec: java cscd211Lab4.CSCD211Lab4
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 1
 Empty List
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 2
 Enter a String for new BoxCar
 dag
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 2
 Enter a String for new BoxCar
 dang
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 2
 Enter a String for new BoxCar
 shit
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 9
 Enter a Index value 2
 The results of remove dag
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 1
 [shit, dang]
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 9
 Enter a Index value 1
 The results of remove dang
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 1
 [shit]
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 1
 [shit]
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 9
 Enter a Index value 3
 Exception in thread "main" java.lang.IndexOutOfBoundsException: remove Failed
 	at cscd211LinkedList.LinkedList.remove(LinkedList.java:270)
 	at cscd211Lab4.CSCD211Lab4.main(CSCD211Lab4.java:82)
 
  ----jGRASP wedge2: exit code for process is 1.
  ----jGRASP: operation complete.
 
  ----jGRASP exec: java cscd211Lab4.CSCD211Lab4
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 2
 Enter a String for new BoxCar
 
  ----jGRASP: process ended by user.
 
  ----jGRASP exec: java cscd211Lab4.CSCD211Lab4
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 4
 Enter a String for new BoxCar
 dance
 Enter a Index value 1
 Exception in thread "main" java.lang.NullPointerException
 	at cscd211LinkedList.LinkedList.add(LinkedList.java:120)
 	at cscd211Lab4.CSCD211Lab4.main(CSCD211Lab4.java:60)
 
  ----jGRASP wedge2: exit code for process is 1.
  ----jGRASP: operation complete.
 
  ----jGRASP exec: java cscd211Lab4.CSCD211Lab4
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 2
 Enter a String for new BoxCar
 dance
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 4
 Enter a String for new BoxCar
 cat
 Enter a Index value 1
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 1
 [dance, cat]
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 4
 Enter a String for new BoxCar
 dog
 Enter a Index value 0
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 1
 [dog, dance, cat]
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 4
 Enter a String for new BoxCar
 fog
 Enter a Index value 1
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 1
 [dog, fog, dance, cat]
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 4
 Enter a String for new BoxCar
 size
 Enter a Index value 10
 Exception in thread "main" java.lang.NullPointerException
 	at cscd211LinkedList.LinkedList.add(LinkedList.java:120)
 	at cscd211Lab4.CSCD211Lab4.main(CSCD211Lab4.java:60)
 
  ----jGRASP wedge2: exit code for process is 1.
  ----jGRASP: operation complete.
 
  ----jGRASP exec: java cscd211Lab4.CSCD211Lab4
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 2
 Enter a String for new BoxCar
 dog
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 2
 Enter a String for new BoxCar
 cat
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 2
 Enter a String for new BoxCar
 fish
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 1
 [fish, cat, dog]
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 2
 Enter a String for new BoxCar
 dog
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 1
 [dog, fish, cat, dog]
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 10
 Enter a String for new BoxCar
 dog
 The results of contains true
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 1
 [fish, cat, dog]
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 2
 Enter a String for new BoxCar
 dog
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 1
 [dog, fish, cat, dog]
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 13
 List size: 4
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 12
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 13
 List size: 0
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 1
 Empty List
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 
  ----jGRASP: process ended by user.
 
  ----jGRASP exec: java cscd211Lab4.CSCD211Lab4
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 2
 Enter a String for new BoxCar
 dance
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 11
 Enter a String for new BoxCar
 bleh
 The results of contains false
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 2
 Enter a String for new BoxCar
 dog
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 12
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 1
 Empty List
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 2
 Enter a String for new BoxCar
 dog
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 11
 Enter a String for new BoxCar
 dog
 The results of contains true
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 1
 Empty List
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 2
 Enter a String for new BoxCar
 dog
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 3
 Enter a String for new BoxCar
 cat
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 3
 Enter a String for new BoxCar
 dog
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 3
 Enter a String for new BoxCar
 fish
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 3
 Enter a String for new BoxCar
 dog
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 1
 [dog, cat, dog, fish, dog]
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 11
 Enter a String for new BoxCar
 dog
 The results of contains true
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 1
 [dog, cat, dog, fish]
 1) Print the List
 2) Create a BoxCar and addFirst
 3) Create a BoxCar and addLast
 4) Create a BoxCar, read and index and add -- at the index
 5) Create a BoxCar, check the list to see if the list contains the BoxCar
 6) Create a BoxCar, find the indexOf that BoxCar
 7) removeFirst
 8) removeLast
 9) Read index remove Node at that index
 10) Create a BoxCar and removeFirstOccurrence of that BoxCar
 11) Create a BoxCar and removeLastOccurrence of that BoxCar
 12) clear the list 
 13) Print the size of the list
 14) Quit
 Enter a menu choice 